# include("builtin.saml")
# include("pervasives.saml")

# def fst(x) = x.fst end
# def snd(x) = x.snd end

# p = { fst = 0 snd = 1 }
# z = p.fst
# print(z)

# def integrate(z) =
  # x = ref(0.)
  # y = !x
  # x := !x + z * dt
  # y
# end
# ir = unref(integrate(1.))
# init = ir.init
# run = ir.run
# x = run(init)
# run(init)
# undt(integrate(1.))
# s = integrator.euler(440.)

# print = builtin("print")
# x = 3
# print("test: ")
# print(x)

# n = 10
# for i = 0 to n do
  # print(i)
# done

# n = 3
# a = array.create(n, 0.)
# for i = 0 to int.sub(n,1) do
  # a[i] := int.to_float(i)
  # print(a[i])
# done

# def s() =
  # s = undt(s())
  # s(1./44100.)
# end
# s = unref(s())
# def s() = s.run(s.init) end

# buflen = 44120
# buf = array.create(buflen, 0.)

# while true do
  # print("loop ")
  # print(buf[0])
  # print("\n")
  # for i = 0 to int.sub(buflen, 1) do
    # buf[i] := s()
  # done
  # array.play(buf)
# done

# def freq() =
  # t = time.now ()
  # t * t
# end
# def s() = osc.saw(10. * freq()) end
# osc.play(s)

x = 5