# ref_new = builtin("ref_new")
# ref_get = builtin("ref_get")
# ref_set = builtin("ref_set")
# null_elim = builtin("null_elim")
# sin = builtin("sin")
pi = pi()

def null_is(x) =
  def t() = true end
  def f(_) = false end
  null_elim(x, t, f)
end

x = if true then 3. else 4. end

x = 2.
xx = x
def x = 3. end
def f(x) =
  y = x
  x
end

def id(x) = x end
a = id(3.)
b = id(())

a = begin
  x = 2.
  5.
end

def a =
  ()
  4.
end

# def succ(x) = x + 1. end

def integrate(init=0., periodic=false, on_reset=fun()->()) =
  y = ref_new(init)
  stream (x) ->
    ans = ref_get(y)
    ref_set(y, ref_get(y) + x * dt)
    if periodic && ref_get(y) >= 1. then ref_set(y, ref_get(y) - 1.); on_reset() end 
    ans
end

def periodic(init=0.) =
  integrate(periodic=true,init=init)
end

def saw() =
  p = periodic(init=0.5)
  stream (freq) ->
    t = !p(freq)
    4. * t - 2.
end    

def sine() =
  p = periodic()
  stream (freq) ->
    t = !p(freq)
    sin(2.*pi*t)
end

def stereo =
 stream (x) -> (x,x)
end

def s =
  # l = sine()(440.)
  l = sine()(440.)
  r = sine()(880.)
  stream ->
    x = !l
    (x, x)
end

# s = sine()(440.) | stereo

# x = ref_new(0.)
# def s = stream ->
  # ref_set(x, ref_get(x) + dt * 440.)
  # x = ref_get(x)
  # (x, x)
# end
play(s)
