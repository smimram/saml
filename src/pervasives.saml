include("builtin.saml")

def printnl(x) =
  print(x)
  print("\n")
end

def id(x) = x end

def prev(init, x) =
  y = ref(init)
  ans = !y
  y := x
  ans
end

module int =
  add = builtin("iadd")

  def incr(x) =
    x := add(!x, 1)
  end

  sub = builtin("isub")

  to_float = builtin("float_of_int")
end

module array =
  create = builtin("array_create")

  get = builtin("array_get")

  set = builtin("array_set")

  play = builtin("array_play")
end

module integrator =
  def euler(phase=0., reset=id, freq) =
    x = ref(phase)
    ans = !x
    x := reset(!x + dt * freq)
    ans
  end
end

module time =
  def now() = integrator.euler(1.) end
end

module osc =
  def sine(freq) = sin(2. * pi * integrator.euler(freq)) end
end