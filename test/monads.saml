# identity = module
  # def return x = x end
# end
# identity = monad identity a = a with identity

state = module
  def return x = fun s -> (s , x) end

  def bind (x , f) = fun s -> begin
      def (s , x) = x s end
      (f x) s
    end
  end
end
state = monad state a = b -> (b * a) with state
